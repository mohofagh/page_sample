{"version":3,"sources":["context.js","components/FormUserDetails.js","components/FormPersonalDetails.js","components/UserForm.js","components/Confirm.js","components/Success.js","components/Puncher.js","components/Records.js","components/SnackBar.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Provider","props","stored","localStorage","getItem","useState","JSON","parse","records","setRecords","useEffect","setItem","stringify","mainState","list","add","newRecord","id","Date","getTime","toString","delete","item","filtered","filter","record","console","log","snackBarState","open","value","children","Consumer","FormUserDetails","continue","e","preventDefault","nextStep","this","values","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","styles","button","onClick","Component","FormPersonalDetails","UserForm","state","step","city","setState","previousStep","input","target","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Puncher","selectedDate","handleDateChange","classes","_context","useContext","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","Grid","container","utils","DateFnsUtils","xs","sm","disableToolbar","format","KeyboardButtonProps","Button","fullWidth","color","snackSetState","message","formatDate","dateTime","location","justify","Link","RouterLink","to","Box","mt","seeMore","Records","handleDelete","row","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","appendChild","click","Table","size","TableHead","TableRow","TableCell","TableBody","map","index","key","d","date","align","close","padding","SimpleSnackbar","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","action","IconButton","aria-label","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f9a856f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { AppBar } from 'material-ui';\n\n\n/* const useStateWithLocalStorage = (storageKey, defaultValue)=>{\n    const stored = localStorage.getItem(storageKey);\n    const [state, setState] = React.useState(\n        stored ? JSON.parse(stored) : defaultValue\n    );\n    React.useEffect(()=>{\n        console.log('stat',state)\n        localStorage.setItem(storageKey, JSON.stringify(state))\n    }, [state]);\n    return [state, setState];\n} */\n\nconst Context = React.createContext();\n\n/* class Provider extends Component {\n\n    state = {\n        boz: 'koohi',\n        appbar: {\n            title: 'asbe abi'\n        },\n        records: [],\n        addRecords: (date)=>{\n            console.log(date)\n            \n            this.setState({\n                addRecords: this.state.records.push(date)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n} */\n\nfunction Provider(props){\n\n\n    // const [records, setRecords] = useStateWithLocalStorage('records', []);\n    const stored = localStorage.getItem('records');\n    const [records, setRecords] = React.useState(\n        stored ? JSON.parse(stored) : []\n    );\n    React.useEffect(()=>{\n        localStorage.setItem('records', JSON.stringify(records))\n    }, [records]);\n\n    const mainState = {\n        records: {\n            list: records,\n            add: newRecord => {\n                const id = new Date().getTime().toString()\n                newRecord.id = id;\n                setRecords([...records, newRecord]);\n            },\n            delete: item => {\n                let filtered = records.filter(record => {\n                    console.log(record, item.id)\n                    return record.id !== item.id\n                })\n                console.log('filtered',filtered)\n                setRecords([...filtered]);\n            }\n        },\n        snackBarState: React.useState({\n            open: false\n        })\n    };\n\n    return (\n        <Context.Provider value={mainState}>\n            {props.children}\n        </Context.Provider>\n    )\n}\nconst Consumer = Context.Consumer;\n\nexport {Provider, Consumer, Context}\n","import React, { Component } from 'react'\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport AppBar from \"material-ui/AppBar\";\nimport TextField from \"material-ui/TextField\";\nimport RaisedButton from \"material-ui/RaisedButton\";\n\nexport class FormUserDetails extends Component {\n\n    continue = (e)=>{\n\n        e.preventDefault();\n        this.props.nextStep();\n    }\n    render() {\n        const {values, handleChange, nextStep} = this.props;\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Enter User Details\"/>\n                    <TextField \n                        hintText=\"Enter Your First Name\"\n                        floatingLabelText=\"First Name\"\n                        onChange={handleChange('firstName')}\n                        defaultValue={values.firstName}\n                    />\n                    <br/>\n                    <TextField \n                        hintText=\"Enter Your lastName\"\n                        floatingLabelText=\"lastName\"\n                        onChange={handleChange('lastName')}\n                        defaultValue={values.lastName}\n                    />\n                    <br/>\n                    <TextField \n                        hintText=\"Enter Your email\"\n                        floatingLabelText=\"email\"\n                        onChange={handleChange('email')}\n                        defaultValue={values.email}\n                    />\n                    <br/>\n                    <RaisedButton label=\"Continue\" primary={true}\n                        styles={styles.button} onClick={nextStep}\n                    />\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n\n    }\n}\n\nexport default FormUserDetails\n","import React, { Component } from 'react'\n\nexport class FormPersonalDetails extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Form personal..</h2>\n            </div>\n        )\n    }\n}\n\nexport default FormPersonalDetails\n","import React, { Component } from 'react'\nimport FormUserDetails from './FormUserDetails';\nimport FormPersonalDetails from './FormPersonalDetails';\nimport Confirm from './Confirm';\nimport Success from './Success';\n\nexport class UserForm extends Component {\n\n    state = {\n        step: 1,\n        firstName: '',\n        lastName: '',\n        email: '',\n        city: ''\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step + 1 })\n    }\n    previousStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step - 1 })\n    }\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    render() {\n        const { step } = this.state;\n        const { firstName, lastName, email } = this.state;\n        const values = { firstName, lastName, email };\n\n        switch (step) {\n            case 1:\n                return (\n                    <FormUserDetails\n                        nextStep={this.nextStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                )\n            case 2:\n                return (\n                    <FormPersonalDetails\n                        nextStep={this.nextStep}\n                        previousStep={this.previousStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                )\n            // case 3:\n            //     return (\n            //         <Confirm\n            //             nextStep={this.nextStep}\n            //             previousStep={this.previousStep}\n            //             handleChange={this.handleChange}\n            //             values={values}\n            //         />\n            //     )\n            // case 4:\n            //     return (\n            //         <Success\n            //             previousStep={this.previousStep}\n            //             handleChange={this.handleChange}\n            //             values={values}\n            //         />\n            //     )\n        }\n    }\n}\n\nexport default UserForm\n","import React, { Component } from 'react'\n\nexport class Confirm extends Component {\n    render() {\n        return (\n            <div>\n                <h1>confirming...</h1>\n            </div>\n        )\n    }\n}\n\nexport default Confirm\n","import React, { Component } from 'react'\n\nexport class Success extends Component {\n    render() {\n        return (\n            <div>\n                <h2>success</h2>\n            </div>\n        )\n    }\n}\n\nexport default Success\n","import React from 'react';\nimport { Context } from '../context';\nimport { Link as RouterLink } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {format as formatDate} from \"date-fns\";\nimport {\n    Container, Grid, Box, Link, Checkbox, AppBar, Toolbar,\n    IconButton, List, ListItem, ListItemText, ListItemIcon, \n    FormControlLabel, TextField, CssBaseline, Button, Avatar\n} from '@material-ui/core';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {/* {'Copyright © '} */}\n            {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                MM\n            </Link>{' '} */}\n            ...\n            {/* {new Date().getFullYear()} */}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\n// COMPONENT..................\nexport default function Puncher() {\n    const [selectedDate, handleDateChange] = React.useState(new Date());\n\n    const classes = useStyles();\n\n    const _context = React.useContext(Context);\n\n    console.log('context,', _context)\n\n    function handleSubmit() {\n        const [snackState, snackSetState] = _context.snackBarState\n        snackSetState({\n            open: false,\n            message: ''\n        });\n        snackSetState({\n            open: true,\n            message: 'Punched at ' + 'Work ' + formatDate(selectedDate, 'HH:mm:ss')\n        });\n        _context.records.add({\n            dateTime: selectedDate,\n            location: 'Work'\n        });\n    }\n\n    /* function LastThreeRecords(props) {\n\n        console.log('last', props)\n        return (\n            <List dense={true}>\n                {\n                    props.records.splice(-3,3).map((item, index) => {\n                        console.log(item)\n                        return (\n                            <ListItem key={index}>\n                                <ListItemIcon>\n                                    <FolderIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={item.location}\n                                    secondary={item.dateTime}\n                                />\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        )\n    } */\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n                <CssBaseline />\n                {/* <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            News\n                        </Typography>\n                        <Button color=\"inherit\">Login</Button>\n                    </Toolbar>\n                </AppBar> */}\n\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <CameraIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Select Time\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Grid item xs={6} sm={6}>\n                                    <KeyboardDatePicker\n                                        disableToolbar\n                                        variant=\"inline\"\n                                        format=\"MM/dd/yyyy\"\n                                        margin=\"normal\"\n                                        id=\"date-picker-inline\"\n                                        label=\"Date\"\n                                        value={selectedDate}\n                                        onChange={handleDateChange}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change date',\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6} sm={6}>\n                                    <KeyboardTimePicker\n                                        margin=\"normal\"\n                                        id=\"time-picker\"\n                                        label=\"Time\"\n                                        value={selectedDate}\n                                        onChange={handleDateChange}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change time',\n                                        }}\n                                    />\n                                </Grid>\n                            </MuiPickersUtilsProvider>\n\n                        </Grid>\n                        <Button\n                            // type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={handleSubmit}\n                        >\n                            Punch\n                        </Button>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Link variant=\"body1\" component={RouterLink} to=\"/records\">\n                                    Show Records\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={5}>\n                    {/* <Copyright /> */}\n                    {/* <LastThreeRecords records={_context.records.list}/> */}\n                </Box>\n            </Container>\n        </React.Fragment>\n    );\n}","/* eslint-disable no-script-url */\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {format} from \"date-fns\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    CssBaseline, Typography, Container, Table, Link,\n    Grid\n} from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { Context } from '../context';\n\n\nconst useStyles = makeStyles(theme => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\nfunction formatDate(d) {\n    const date = new Date(d);\n    return format(date, 'yyyy/MM/dd HH:mm')\n}\n\nexport default function Records() {\n    const classes = useStyles();\n\n    const records = React.useContext(Context).records;\n\n    const handleExport = e => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([JSON.stringify(records.list)], { type: 'text/plain' });\n        element.href = URL.createObjectURL(file);\n        element.download = \"myFile.txt\";\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    }\n\n    const handleDelete = row => e => {\n        records.delete(row)\n    }\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n                <CssBaseline />\n\n                <div className={classes.paper}>\n                    {/* <Grid container spacing={2}>\n                        <Grid item xs={6} sm={6}>\n                            \n                        </Grid>\n                        <Grid item xs={6} sm={6}>\n                            \n                        </Grid>\n                    </Grid> */}\n\n                    <Link variant=\"body1\" component={RouterLink} to=\"/\">\n                        Back\n                            </Link>\n                    <Link variant=\"body1\" onClick={handleExport}>\n                        Export\n                            </Link>\n\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell>Location</TableCell>\n                                {/* <TableCell align=\"right\">Sale Amount</TableCell> */}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                records.list.map((row, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell>{formatDate(row.dateTime)}</TableCell>\n                                        <TableCell>{row.location}</TableCell>\n\n                                        <TableCell align=\"right\">\n                                        <Link variant=\"body1\" onClick={handleDelete(row)}>\n                                        Delete\n                                            </Link>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n\n\n            </Container>\n        </React.Fragment>\n\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Context } from '../context';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function SimpleSnackbar() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(Context).snackBarState;\n\n  const handleClick = () => {\n    setState({\n        open: true\n    });\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setState({\n        open: false,\n        message: '-'\n    });\n  };\n\n  return (\n    <div>\n      {/* <Button onClick={handleClick}>Open simple snackbar</Button> */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={state.open}\n        autoHideDuration={1000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">{state.message}</span>}\n        action={[\n        //   <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n        //     UNDO\n        //   </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}","import React from 'react';\nimport { Provider } from './context';\nimport './App.css';\nimport UserForm from './components/UserForm';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { AppBar } from 'material-ui';\nimport Puncher from './components/Puncher';\n// import RecordList from './components/RecordList'\nimport Records from './components/Records'\nimport SnackBar from './components/SnackBar'\n\n\nfunction App() {\n  return (\n    <Provider>\n      <BrowserRouter>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Puncher} />\n            <Route exact path=\"/records\" component={Records} />\n            <Route exact path=\"/userform\" component={UserForm} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n      <SnackBar />\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}